<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.enerbos.cloud.eam.microservice.repository.mybatis.DefectOrderDao">

    <!-- 查询字段公共sql -->
	<sql id="selectAllColumns">
		<![CDATA[
			SELECT 
				id            AS   id          ,
				defect_order_num      AS   defectOrderNum    ,
				description          AS   description        ,
				status       AS   status     ,
				status_date       AS   statusDate     ,
				project_type AS projectType,
				reporter_assign_flag      AS   reporterAssignFlag    ,
				incident_level AS incidentLevel,
				execution_work_group           AS   executionWorkGroup         ,
				defect_document_id        AS   defectDocumentId      ,
				site_id           AS   siteId         ,
				org_id   AS   orgId ,
				report_id        AS   reportId      ,
				report_date AS reportDate,
				explain_desc       AS   explainDesc     ,
				entrust_execute         AS   entrustExecute       ,
				assign_person_id      AS   assignPersonId    ,
				response_time    AS   responseTime  ,
				plan_start_date    AS   planStartDate  ,
				plan_completion_date AS  planCompletionDate,
				actual_executor_id AS  actualExecutorResponsibleId,
				actual_work_group      AS   actualWorkGroup    ,
				actual_start_date    AS   actualStartDate  ,
				actual_end_date AS  actualEndDate,
				failure_summarize AS  failureSummarize,
				suspension AS  suspension,
				suspension_start_date AS  suspensionStartDate,
				suspension_end_date AS  suspensionEndDate,
				suspension_type AS  suspensionType,
				execute_whether_timeout AS  executeWhetherTimeout,
				consume_hours AS  consumeHours,
				confirm AS  confirm,
				acception_date AS  acceptionDate,
				acceptor_id AS  acceptorId,
				acception_desc AS  acceptionDesc,
				process_instance_id AS processInstanceId,
				 update_date as updateDate,
				 create_user as createUser,
				 create_date as createDate
				from eam_defect_order defectOrder
		]]>
	</sql>

	<select id="findDefectOrderByID" parameterType="String" resultType="com.enerbos.cloud.eam.microservice.domain.DefectOrder">
        <include refid="selectAllColumns" /> 
         where defectOrder.id = #{id}
    </select>

    <select id="findDefectOrderByDefectOrderNum" parameterType="String" resultType="com.enerbos.cloud.eam.vo.DefectOrderVo">
        <include refid="selectAllColumns" />  
         where defectOrder.defect_order_num = #{defectOrderNum}
    </select>

	<select id="findPageDefectOrderList" resultType="com.enerbos.cloud.eam.vo.DefectOrderForListVo" parameterType="com.enerbos.cloud.eam.vo.DefectOrderForFilterVo">
		SELECT
		id            AS   id          ,
		defect_order_num      AS   defectOrderNum    ,
		description          AS   description        ,
		defect_document_id        AS   defectDocumentId      ,
		project_type AS projectType,
		site_id           AS   siteId         ,
		status       AS   status,
		report_id        AS   reportId      ,
		report_date AS reportDate,
		process_instance_id AS processInstanceId,
		collect
		FROM
		(SELECT
		*,
		<choose>
			<!-- 如果人员ID为空，则不需要连表操作 -->
			<when test="personId != null ">
				EXISTS (
				SELECT 1 FROM
				eam_defect_order_rf_collector defectOrderRfCollector
				WHERE
				eam_defect_order.id = defectOrderRfCollector.defect_order_id
				AND defectOrderRfCollector.person_id = #{personId}
				) AS collect
			</when>
			<otherwise>
				0 as collect
			</otherwise>
		</choose>
		from eam_defect_order)  defectOrder
		where 1=1
		<if test = "projectType != null  and projectType.size()>0">
			and defectOrder.project_type  in
			<foreach collection="projectType" item="projectType" index="index"  open="(" separator=" , " close=")">
				#{projectType}
			</foreach>
		</if>
		<if test = "status != null  and status.size()>0">
			and defectOrder.status  in
			<foreach collection="status" item="status" index="index"  open="(" separator=" , " close=")">
				#{status}
			</foreach>
		</if>
		<if test = "reporterAssignFlag != null ">
			<![CDATA[ and defectOrder.reporter_assign_flag  = #{reporterAssignFlag} ]]>
		</if>
		<if test = "incidentLevel != null  and incidentLevel.size()>0">
			and defectOrder.incident_level  in
			<foreach collection="incidentLevel" item="incidentLevel" index="index"  open="(" separator=" , " close=")">
				#{incidentLevel}
			</foreach>
		</if>
		<if test = "defectDocumentId != null ">
			<![CDATA[ and defectOrder.defect_document_id  = #{defectDocumentId} ]]>
		</if>
		<if test = "siteId != null ">
			<![CDATA[ and defectOrder.site_id  = #{siteId} ]]>
		</if>
		<if test = "orgId != null ">
			<![CDATA[ and defectOrder.org_id  = #{orgId} ]]>
		</if>
		<if test = "reportId != null  and reportId.size()>0">
			and defectOrder.report_id  in
			<foreach collection="reportId" item="reportId" index="index"  open="(" separator=" , " close=")">
				#{reportId}
			</foreach>
		</if>
		<if test = "reportStartDate != null ">
			<![CDATA[ and defectOrder.report_date  >= #{reportStartDate} ]]>
		</if>
		<if test = "reportEndDate != null ">
			<![CDATA[ and defectOrder.report_date  <= DATE_SUB(#{reportEndDate},INTERVAL -1 DAY) ]]>
		</if>
		<if test = "acceptionStartDate != null ">
			<![CDATA[ and defectOrder.acception_date  >= #{acceptionStartDate} ]]>
		</if>
		<if test = "acceptionStartDate != null ">
			<![CDATA[ and defectOrder.acception_date  <= DATE_SUB(#{acceptionStartDate},INTERVAL -1 DAY) ]]>
		</if>
		<if test = "acceptorId != null and acceptorId.size()>0">
			and defectOrder.acceptor_id  in
			<foreach collection="acceptorId" item="acceptorId" index="index"  open="(" separator=" , " close=")">
				#{acceptorId}
			</foreach>
		</if>
		<if test = "wordsList != null ">
			<foreach collection="wordsList" item="word" index="index" separator="  " >
				and (defectOrder.defect_order_num like CONCAT('%',#{word},'%') or
				defectOrder.description like CONCAT('%',#{word},'%')
				)
			</foreach>
		</if>
		<if test="collect != null">
			and defectOrder.collect  = #{collect}
		</if>
		<choose>
			<when test="sorts !=null and sorts !=''">
				order by ${sorts}
			</when>
			<otherwise>
				order by defectOrder.create_date desc
			</otherwise>
		</choose>
	</select>
</mapper>