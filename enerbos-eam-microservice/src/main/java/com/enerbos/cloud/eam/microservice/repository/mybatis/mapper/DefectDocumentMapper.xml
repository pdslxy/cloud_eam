<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.enerbos.cloud.eam.microservice.repository.mybatis.DefectDocumentDao">

    <!-- 查询字段公共sql -->
	<sql id="selectAllColumns">
		<![CDATA[
			SELECT 
				id            AS   id          ,
				defect_document_num      AS   defectDocumentNum    ,
				description          AS   description        ,
				archives_id      AS   archivesId    ,
				region AS region,
				building_num           AS   buildingNum         ,
				floor        AS   floor      ,
				project_type AS projectType,
				site_id           AS   siteId         ,
				org_id   AS   orgId ,
				status       AS   status     ,
				completeness        AS   completeness      ,
				standard AS standard,
				responsibility         AS   responsibility       ,
				remark      AS   remark    ,
				importance    AS   importance  ,
				other AS  other,
				position AS  position,
				process_instance_id AS processInstanceId,
				proposed_measures           AS   proposedMeasures         ,
				confirm_date       AS   confirmDate     ,
				confirm_person_id       AS   confirmPersonId     ,
				find_date      AS   findDate,
				report_id       AS   reportId,
				report_date       AS   reportDate,
				 update_date as updateDate,
				 create_user as createUser,
				 create_date as createDate
				from eam_defect_document defectDocument
		]]>
	</sql>

	<select id="findDefectDocumentByID" parameterType="String" resultType="com.enerbos.cloud.eam.microservice.domain.DefectDocument">
        <include refid="selectAllColumns" /> 
         where defectDocument.id = #{id}
    </select>

    <select id="findDefectDocumentByDefectDocumentNum" parameterType="String" resultType="com.enerbos.cloud.eam.vo.DefectDocumentVo">
        <include refid="selectAllColumns" />  
         where defectDocument.defect_document_num = #{defectDocumentNum}
    </select>

	<select id="findPageDefectDocumentList" resultType="com.enerbos.cloud.eam.vo.DefectDocumentForListVo" parameterType="com.enerbos.cloud.eam.vo.DefectDocumentForFilterVo">
		SELECT
		id            AS   id          ,
		defect_document_num      AS   defectDocumentNum    ,
		description          AS   description        ,
		archives_id      AS   archivesId    ,
		project_type AS projectType,
		importance       AS   importance     ,
		responsibility         AS   responsibility       ,
		find_date        AS   findDate      ,
		site_id           AS   siteId         ,
		status       AS   status,
		process_instance_id AS processInstanceId,
		completeness       AS   completeness,
		collect
		FROM
		(SELECT
		*,
		<choose>
			<!-- 如果人员ID为空，则不需要连表操作 -->
			<when test="personId != null ">
				EXISTS (
				SELECT 1 FROM
				eam_defect_document_rf_collector defectDocumentRfCollector
				WHERE
				eam_defect_document.id = defectDocumentRfCollector.defect_document_id
				AND defectDocumentRfCollector.person_id = #{personId}
				) AS collect
			</when>
			<otherwise>
				0 as collect
			</otherwise>
		</choose>
		from eam_defect_document)  defectDocument
		where 1=1
		<if test = "projectType != null  and projectType.size()>0">
			and defectDocument.project_type  in
			<foreach collection="projectType" item="projectType" index="index"  open="(" separator=" , " close=")">
				#{projectType}
			</foreach>
		</if>
		<if test = "status != null  and status.size()>0">
			and defectDocument.status  in
			<foreach collection="status" item="status" index="index"  open="(" separator=" , " close=")">
				#{status}
			</foreach>
		</if>
		<if test = "region != null  and region.size()>0">
			and defectDocument.region  in
			<foreach collection="region" item="region" index="index"  open="(" separator=" , " close=")">
				#{region}
			</foreach>
		</if>
		<if test = "buildingNum != null  and buildingNum.size()>0">
			and defectDocument.building_num  in
			<foreach collection="buildingNum" item="buildingNum" index="index"  open="(" separator=" , " close=")">
				#{buildingNum}
			</foreach>
		</if>
		<if test = "floor != null  and floor.size()>0">
			and defectDocument.floor  in
			<foreach collection="floor" item="floor" index="index"  open="(" separator=" , " close=")">
				#{floor}
			</foreach>
		</if>
		<if test = "importance != null and importance.size()>0">
			and defectDocument.importance  in
			<foreach collection="importance" item="importance" index="index"  open="(" separator=" , " close=")">
				#{importance}
			</foreach>
		</if>
		<if test = "responsibility != null and responsibility.size()>0">
			and defectDocument.responsibility  in
			<foreach collection="responsibility" item="responsibility" index="index"  open="(" separator=" , " close=")">
				#{responsibility}
			</foreach>
		</if>
		<if test = "standard != null and standard.size()>0">
			and defectDocument.standard  in
			<foreach collection="standard" item="standard" index="index"  open="(" separator=" , " close=")">
				#{standard}
			</foreach>
		</if>
		<if test = "archivesId != null and archivesId.size()>0">
			and defectDocument.archives_id  in
			<foreach collection="archivesId" item="archivesId" index="index"  open="(" separator=" , " close=")">
				#{archivesId}
			</foreach>
		</if>
		<if test = "reportId != null and reportId.size()>0">
			and defectDocument.report_id  in
			<foreach collection="reportId" item="reportId" index="index"  open="(" separator=" , " close=")">
				#{reportId}
			</foreach>
		</if>
		<if test = "siteId != null ">
			<![CDATA[ and defectDocument.site_id  = #{siteId} ]]>
		</if>
		<if test = "orgId != null ">
			<![CDATA[ and defectDocument.org_id  = #{orgId} ]]>
		</if>
		<if test = "findStartDate != null ">
			<![CDATA[ and defectDocument.find_date  >= #{findStartDate} ]]>
		</if>
		<if test = "findEndDate != null ">
			<![CDATA[ and defectDocument.find_date  <= DATE_SUB(#{findEndDate},INTERVAL -1 DAY) ]]>
		</if>
		<if test = "reportStartDate != null ">
			<![CDATA[ and defectDocument.report_date  >= #{reportStartDate} ]]>
		</if>
		<if test = "reportEndDate != null ">
			<![CDATA[ and defectDocument.report_date  <= DATE_SUB(#{reportEndDate},INTERVAL -1 DAY) ]]>
		</if>
		<if test = "confirmStartDate != null ">
			<![CDATA[ and defectDocument.confirm_date  >= #{confirmStartDate} ]]>
		</if>
		<if test = "confirmEndDate != null ">
			<![CDATA[ and defectDocument.confirm_date  <= DATE_SUB(#{confirmEndDate},INTERVAL -1 DAY) ]]>
		</if>
		<if test = "confirmPersonId != null and confirmPersonId.size()>0">
			and defectDocument.confirm_person_id  in
			<foreach collection="confirmPersonId" item="confirmPersonId" index="index"  open="(" separator=" , " close=")">
				#{confirmPersonId}
			</foreach>
		</if>
		<if test = "createUser != null and createUser.size()>0">
			and defectDocument.create_user  in
			<foreach collection="createUser" item="createUser" index="index"  open="(" separator=" , " close=")">
				#{createUser}
			</foreach>
		</if>
		<if test = "createStartDate != null ">
			<![CDATA[ and defectDocument.create_date  >= #{createStartDate} ]]>
		</if>
		<if test = "createEndDate != null ">
			<![CDATA[ and defectDocument.create_date  <= DATE_SUB(#{createEndDate},INTERVAL -1 DAY) ]]>
		</if>
		<if test = "wordsList != null ">
			<foreach collection="wordsList" item="word" index="index" separator="  " >
				and (defectDocument.defect_document_num like CONCAT('%',#{word},'%') or
				defectDocument.description like CONCAT('%',#{word},'%') or
				defectDocument.completeness like CONCAT('%',#{word},'%')
				)
			</foreach>
		</if>
		<if test="collect != null">
			and defectDocument.collect  = #{collect}
		</if>
		<choose>
			<when test="sorts !=null and sorts !=''">
				order by ${sorts}
			</when>
			<otherwise>
				order by defectDocument.create_date desc
			</otherwise>
		</choose>
	</select>
</mapper>